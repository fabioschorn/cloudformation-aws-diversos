import boto3
import json
import os

# AWS Clients
sqs = boto3.client("sqs")

# Environment variable expected: SQS_QUEUE_URL
SQS_QUEUE_URL = os.environ["SQS_QUEUE_URL"]

def lambda_handler(event, context):
    print("üîç Polling messages from SQS...")

    try:
        response = sqs.receive_message(
            QueueUrl=SQS_QUEUE_URL,
            MaxNumberOfMessages=5,
            WaitTimeSeconds=2,
            VisibilityTimeout=10  # Temporarily hides messages for 10s
        )

        messages = response.get("Messages", [])

        if not messages:
            print("‚úÖ No messages in the queue.")
            return {"status": "No messages found"}

        for msg in messages:
            print("üü¢ Message ID:", msg["MessageId"])
            try:
                body = json.loads(msg["Body"])
                print("üì¶ Body:\n", json.dumps(body, indent=2))
            except Exception as e:
                print("‚ö†Ô∏è Could not decode message body:", msg["Body"])

            # Optional: Delete message after viewing
            # sqs.delete_message(
            #     QueueUrl=SQS_QUEUE_URL,
            #     ReceiptHandle=msg["ReceiptHandle"]
            # )
            print("-" * 60)

        return {"status": "Success", "messages_received": len(messages)}

    except Exception as e:
        print("‚ùå Error receiving messages:", str(e))
        return {"status": "Error", "message": str(e)}