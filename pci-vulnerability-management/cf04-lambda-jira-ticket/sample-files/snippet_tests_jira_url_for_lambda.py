import socket
import requests
import ssl

# Set your JIRA URL here
JIRA_URL = "https://jita.tests.int.com"

def check_dns_resolution(url):
    """Check if the domain can be resolved to an IP address."""
    try:
        hostname = url.split("//")[-1].strip('/')
        ip = socket.gethostbyname(hostname)
        print(f"‚úÖ DNS Resolution Successful: {hostname} -> {ip}")
        return True
    except socket.gaierror as e:
        print(f"‚ùå DNS Resolution Failed: {e}")
        return False

def check_jira_connectivity(url):
    """Attempt an HTTP GET request to verify connectivity to JIRA."""
    try:
        response = requests.get(url, timeout=5, verify=False)  # Ignore SSL verification for internal JIRA
        print(f"‚úÖ HTTP Request Successful: {response.status_code}")
        return True
    except requests.exceptions.RequestException as e:
        print(f"‚ùå HTTP Request Failed: {e}")
        return False

def lambda_handler(event, context):
    """AWS Lambda function entry point."""
    print(f"üîç Testing connectivity to {JIRA_URL}...\n{'-' * 50}")

    dns_ok = check_dns_resolution(JIRA_URL)
    
    if dns_ok:
        http_ok = check_jira_connectivity(JIRA_URL)
        if http_ok:
            print("üéØ SUCCESS: Lambda has access to JIRA!")
            return {"status": "Success", "message": "Lambda can reach JIRA."}
        else:
            print("‚ö†Ô∏è ERROR: Lambda cannot reach JIRA over HTTP!")
            return {"status": "Failed", "message": "JIRA is unreachable via HTTP."}
    else:
        print("üö® CRITICAL ERROR: DNS resolution failed for JIRA!")
        return {"status": "Failed", "message": "DNS resolution failed."}