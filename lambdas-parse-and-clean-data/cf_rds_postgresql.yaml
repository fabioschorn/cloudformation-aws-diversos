AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates an RDS PostgreSQL Database for storing vulnerability management data."

Parameters:
  DBName:
    Type: String
    Default: vulnerabilitydb
    Description: "The database name."

  DBUsername:
    Type: String
    Default: adminuser
    Description: "Database admin username."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "must be alphanumeric."

  DBPassword:
    Type: String
    Description: "Database admin password (min 8 chars, at least one number)."
    NoEcho: true
    MinLength: 8
    AllowedPattern: "(?=.*[0-9])(?=.*[a-zA-Z]).+"
    ConstraintDescription: "must have at least one number and one letter."

  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
    Description: "RDS Instance Type."

Resources:

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for PostgreSQL RDS"
      SubnetIds:
        - subnet-xxxxxxxx # REPLACE WITH YOUR SUBNET-1 ID
        - subnet-yyyyyyyy # REPLACE WITH YOUR SUBNET-2 ID

  DBInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow PostgreSQL access from Lambda and authorized clients"
      VpcId: vpc-xxxxxxxx # REPLACE WITH YOUR VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0 # Later restrict this to your Lambda or specific IPs!

  PostgreSQLRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: "15.4"
      DBInstanceClass: !Ref DBInstanceClass
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: 20
      StorageType: gp2
      BackupRetentionPeriod: 3
      MultiAZ: false
      PubliclyAccessible: true # Consider making false if Lambda in VPC
      StorageEncrypted: true
      VPCSecurityGroups:
        - !GetAtt DBInstanceSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeletionProtection: false # Enable if needed in production environments

Outputs:
  PostgreSQLEndpoint:
    Description: "Endpoint address of the PostgreSQL instance"
    Value: !GetAtt PostgreSQLRDSInstance.Endpoint.Address

  PostgreSQLPort:
    Description: "Port of the PostgreSQL instance"
    Value: !GetAtt PostgreSQLRDSInstance.Endpoint.Port